### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum DayEnum {
  FRIDAY
  MONDAY
  SATURDAY
  SUNDAY
  THURSDAY
  TUESDAY
  WEDNESDAY
}

type Food {
  calories: Int
  id: Int!
  ingredients: [Ingredient]
  name: String!
  quantity: Float!
  unitOfMeasure: String!
}

type Ingredient {
  description: String!
  have: Boolean!
  id: Int!
  isGroupHeader: Boolean!
  quantity: Float
  quantity2: Float
  recipeId: Int!
  unitOfMeasure: String
}

type Meal {
  day: DayEnum!
  id: Int!
  mealType: MealTypeEnum!
  recipes: [Recipe!]
}

enum MealTypeEnum {
  BREAKFAST
  DINNER
  LUNCH
  SNACKS
}

type Mutation {
  clearMealRecipes: Meal
  createFood(calories: Int, name: String!, quantity: Float!, unitOfMeasure: String!): Food!
  createRecipe(cookTime: Int, ingredients: [ingredientInput], instructions: String, name: String!, prepTime: Int, requiresOven: Boolean!, requiresStovetop: Boolean!, serves: Float): Recipe!
  deleteRecipe(deleteRecipeId: Int!): Recipe!
  updateIngredientsHave(ingredientIds: [Int]!): Boolean!
  updateMealRecipes(mealId: Int!, newRecipeIds: [Int]!, removeRecipeIds: [Int]!): Meal!
  updateRecipe(newData: recipeInput!, recipeId: Int!): Recipe!
}

type Query {
  ingredient(recipeIds: [Int]!): [Ingredient]
  recipe: [Recipe]
}

type Recipe {
  cookTime: Int
  id: Int!
  ingredients: [Ingredient]
  instructions: String
  meals: [Meal]
  name: String!
  prepTime: Int
  requiresOven: Boolean!
  requiresStovetop: Boolean!
  serves: Float
}

input ingredientInput {
  description: String!
  id: Int
  isGroupHeader: Boolean
  quantity: Float
  quantity2: Float
  recipe: recipeInput!
  recipeId: Int
  unitOfMeasure: String
}

input recipeInput {
  cookTime: Int
  id: Int
  ingredients: [ingredientInput!]
  instructions: String
  name: String
  prepTime: Int
  requiresOven: Boolean
  requiresStovetop: Boolean
  serves: Float
}